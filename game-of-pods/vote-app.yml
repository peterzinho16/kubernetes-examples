apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    run: redis-deployment
  name: redis-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      run: redis-deployment
  strategy: {}
  template:
    metadata:
      labels:
        run: redis-deployment
    spec:
      volumes:
        - name: redis-data
          emptyDir: {}
      containers:
        - image: redis:alpine
          name: redis-deployment
          volumeMounts:
            - name: redis-data
              mountPath: /data
              readOnly: false
          resources: {}
status: {}
---
#k expose deploy redis-deployment --type=ClusterIP --port 6379 --name redis
---
#k run vote-deployment --replicas 1 --image kodekloud/examplevotingapp_vote:before
---
apiVersion: v1
kind: Service
metadata:
  labels:
    run: vote-service
  name: vote-service
spec:
  ports:
    - port: 5000
      protocol: TCP
      targetPort: 80
      nodePort: 31000
  selector:
    run: vote-deployment
  type: NodePort
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    run: db-deployment
  name: db-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      run: db-postgres
  strategy: {}
  template:
    metadata:
      labels:
        run: db-postgres
    spec:
      volumes:
        - name: db-data
          emptyDir: {}
      containers:
        - image: postgres:9.4
          name: postgres
          volumeMounts:
            - name: db-data
              mountPath: /var/lib/postgresql/data
              readOnly: false
          env:
            - name: POSTGRES_PASSWORD
              value: password
          resources: {}
status: {}
---
#k expose deploy db-deployment --type ClusterIP --port=5432 --name db
---
#k run result-deployment --image kodekloud/examplevotingapp_result:before --replicas 1
---
apiVersion: v1
kind: Service
metadata:
  labels:
    run: result-service
  name: result-service
spec:
  ports:
    - port: 5001
      protocol: TCP
      targetPort: 80
      nodePort: 31001
  selector:
    run: result-deployment
  type: NodePort
status:
  loadBalancer: {}
---
#k run worker --image kodekloud/examplevotingapp_worker --replicas 1